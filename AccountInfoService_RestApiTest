@isTest
public class AccountInfoService_RestApiTest {
    @testSetup static void setup() {
        // Create common test accounts
        List<Account> acc = new List<Account>();
        List<Contact> conList = new List<Contact>();
        for(Integer i=0;i<5;i++) {
            acc.add(new Account(Name = 'TestAcc'+i));
        }
        insert acc;  
        for(Account acclist : acc){
            Contact con = new Contact();
            con.LastName = acclist.name;
            con.AccountId = acclist.Id;
            conlist.add(con);
        }
        insert conlist;
    }
    
    
    @isTest
    static void GetAccountDetails_SuccesssCase() {
        // Set up a mock REST request
        RestRequest request = new RestRequest();
        Account acct = [SELECT Id,Name FROM Account WHERE Name='TestAcc0'];
        system.debug('acct== ' + acct );
        request.requestURI = '/services/apexrest/accountsInfo/' + acct.Id;
        RestContext.request = request;
        
         // Set up a mock REST response
        RestResponse responseMock = new RestResponse();
        RestContext.response = responseMock;
        
         // Call the REST service method        
        AccountInfoService_RestApi.AccountDetailsResponse response = AccountInfoService_RestApi.getAccountDetails();
        
        // Assert the response
        System.assertEquals(true, response.success);
        System.assertEquals('Account details retrieved successfully', response.message);
        System.assertEquals(acct.Id, response.accountId);
        System.assertEquals(acct.Name, response.accountName);
        System.assertEquals(200, RestContext.response.statusCode);
        
    }
    
    
    @isTest
    static void testGetAccountDetails_FailureCase() {
        RestRequest request = new RestRequest();
        Contact conct = [SELECT Id,Name,LastName FROM Contact WHERE Name='TestAcc0' LIMIT 1];
        system.debug('conct== ' + conct );
        request.requestURI = '/services/apexrest/accountsInfo/' + conct.Id;
        RestContext.request = request;
        RestResponse responseMock = new RestResponse();
        RestContext.response = responseMock;
        
        AccountInfoService_RestApi.AccountDetailsResponse response = AccountInfoService_RestApi.getAccountDetails();
        
        System.assertEquals(false, response.success);
        System.assertEquals('There is no account with the Provided Id, please provide a valid one', response.message);
        System.assertEquals(400, RestContext.response.statusCode);
        
        
        
    }
    @isTest
    static void testGetAccountDetails_Missing() {
        RestRequest request = new RestRequest();
        request.requestURI = '/services/apexrest/accountsInfo/' ;
        RestContext.request = request;
        
        RestResponse responseMock = new RestResponse();
        RestContext.response = responseMock;
        
        AccountInfoService_RestApi.AccountDetailsResponse response = AccountInfoService_RestApi.getAccountDetails();
        
        System.assertEquals(false, response.success);
        System.assertEquals('Account ID is required', response.message);
        System.assertEquals(404, RestContext.response.statusCode);
    }
    
}
